tArgs = {...}

if not tArgs[1] or not OneOS.FS.exists(tArgs[1]) then
	OneOS.Close()
end

OneOS.LoadAPI('/System/API/Helpers.lua')
OneOS.LoadAPI('/System/API/Drawing.lua')

Drawing.Clear(colours.white)
Drawing.DrawCharactersCenter(nil, nil, nil, nil, 'Extracting Package...', colours.black, colours.white)
Drawing.DrawBuffer()


local packrun, err = OneOS.LoadFile(tArgs[1])
local env = getfenv()
env['installLocation'] = Helpers.RemoveFileName(tArgs[1])..'/'
setfenv( packrun, env)
if packrun then
	packrun()
else
	error(err)
	error(tArgs[1])
	error('The package appears to be corrupt.')
end

Drawing.Clear(colours.white)
Drawing.DrawCharactersCenter(nil, nil, nil, nil, 'Package Extracted', colours.black, colours.white)
Drawing.DrawBuffer()

sleep(1)
OneOS.Close()